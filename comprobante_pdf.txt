const express = require('express');
const app = express();
const bodyParser = require('body-parser');
const fs = require('fs');
const PDFDocument = require('pdfkit');

app.use(bodyParser.json());

// Ruta para generar el comprobante
app.post('/api/generar-comprobante', (req, res) => {
    const datos = req.body; // Recibe los datos del frontend

    const doc = new PDFDocument();
    const filePath = `comprobante_Owlflix_${Date.now()}.pdf`;

    // Crear y guardar el PDF
    doc.pipe(fs.createWriteStream(filePath));
    doc.fontSize(20).text('Comprobante de Compra', { align: 'center' });
    doc.moveDown();
    doc.fontSize(12).text(`Cliente: ${datos.cliente}`);
    doc.text(`Fecha: ${datos.fecha}`);
    doc.text(`Número de Comprobante: ${datos.numeroComprobante}`);
    doc.moveDown();
    doc.fontSize(14).text('Productos:', { underline: true });

    datos.productos.forEach(producto => {
        doc.fontSize(12).text(`${producto.name} - $${producto.price}`); // Deadpool & Wolverine: $1000
    });

    doc.moveDown();
    doc.fontSize(12).text(`Descuento: -$${datos.descuento}`); // Descuento: $
    doc.fontSize(14).text(`Total: $${datos.total}`, { align: 'right' });
    doc.moveDown();
    doc.fontSize(10).text('Gracias por su compra en Owlflix.', { align: 'center' });
    doc.end();

    // Enviar el archivo al cliente
    doc.on('finish', () => {
        res.download(filePath, 'comprobante.pdf', err => {
            if (err) {
                console.error('Error al descargar el archivo:', err);
                res.status(500).send('Error al generar el comprobante.');
            }

            // Eliminar el archivo después de enviarlo
            fs.unlinkSync(filePath);
        });
    });

    res.status(200).send('Datos recibidos correctamente'); // Responde con un mensaje simple
});

// Iniciar el servidor
app.listen(3000, () => {
    console.log('Servidor corriendo en http://localhost:3000');
});
index.js
2 KB